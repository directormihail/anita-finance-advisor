{"ast":null,"code":"import React from'react';import'./FinancialStats.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FinancialStats=_ref=>{let{transactions=[]}=_ref;// Calculate real data from transactions\nconst currentMonth=new Date().getMonth();const currentYear=new Date().getFullYear();const currentMonthTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const income=currentMonthTransactions.filter(t=>t.type==='income');const expenses=currentMonthTransactions.filter(t=>t.type==='expense');// Calculate expense categories\nconst expenseCategories=expenses.reduce((acc,transaction)=>{const category=transaction.category||'Other';if(!acc[category]){acc[category]=0;}acc[category]+=transaction.amount;return acc;},{});const expenseData=Object.entries(expenseCategories).map((_ref2,index)=>{let[name,value]=_ref2;return{name,value,color:['#667eea','#764ba2','#f093fb','#f5576c','#4facfe','#10b981','#f59e0b'][index%7]};});// Calculate monthly data for the last 6 months\nconst monthlyData=[];for(let i=5;i>=0;i--){const date=new Date();date.setMonth(date.getMonth()-i);const monthName=date.toLocaleDateString('en-US',{month:'short'});const monthTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===date.getMonth()&&transactionDate.getFullYear()===date.getFullYear();});const monthIncome=monthTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0);const monthExpenses=monthTransactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+t.amount,0);monthlyData.push({month:monthName,income:monthIncome,expenses:monthExpenses});}const totalIncome=income.reduce((sum,t)=>sum+t.amount,0);const totalExpenses=expenses.reduce((sum,t)=>sum+t.amount,0);const savingsRate=totalIncome>0?Math.round((totalIncome-totalExpenses)/totalIncome*100):0;// Calculate max value for bar scaling\nconst maxValue=Math.max(...monthlyData.map(d=>Math.max(d.income,d.expenses)));return/*#__PURE__*/_jsxs(\"div\",{className:\"financial-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Monthly Expenses\"}),expenseData.length>0?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"expense-legend\",children:expenseData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:item.color}}),/*#__PURE__*/_jsx(\"span\",{className:\"legend-label\",children:item.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-value\",children:[\"$\",item.value.toFixed(2)]})]},index))})}):/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'20px',color:'#888'},children:\"No expenses recorded this month\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Income vs Expenses (Last 6 Months)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bar-chart-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar-chart\",children:monthlyData.map((data,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bar-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar-labels\",children:/*#__PURE__*/_jsx(\"span\",{className:\"month-label\",children:data.month})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bars\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar income-bar\",style:{height:\"\".concat(data.income/maxValue*100,\"%\"),backgroundColor:'#10b981'},title:\"Income: $\".concat(data.income.toFixed(2))}),/*#__PURE__*/_jsx(\"div\",{className:\"bar expense-bar\",style:{height:\"\".concat(data.expenses/maxValue*100,\"%\"),backgroundColor:'#ef4444'},title:\"Expenses: $\".concat(data.expenses.toFixed(2))})]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-legend\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#10b981'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Income\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#ef4444'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Expenses\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Total Monthly Income\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value positive\",children:[\"$\",totalIncome.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Total Monthly Expenses\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value\",children:[\"$\",totalExpenses.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Net Balance\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value \".concat(totalIncome-totalExpenses>=0?'positive':''),children:[\"$\",(totalIncome-totalExpenses).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Savings Rate\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value positive\",children:[savingsRate,\"%\"]})]})]})]});};export default FinancialStats;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FinancialStats","_ref","transactions","currentMonth","Date","getMonth","currentYear","getFullYear","currentMonthTransactions","filter","t","transactionDate","date","income","type","expenses","expenseCategories","reduce","acc","transaction","category","amount","expenseData","Object","entries","map","_ref2","index","name","value","color","monthlyData","i","setMonth","monthName","toLocaleDateString","month","monthTransactions","monthIncome","sum","monthExpenses","push","totalIncome","totalExpenses","savingsRate","Math","round","maxValue","max","d","className","children","length","item","style","backgroundColor","toFixed","textAlign","padding","data","height","concat","title"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/components/FinancialStats.tsx"],"sourcesContent":["import React from 'react';\r\nimport './FinancialStats.css';\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'income' | 'expense';\r\n  amount: number;\r\n  category: string;\r\n  description: string;\r\n  date: Date;\r\n}\r\n\r\ninterface FinancialStatsProps {\r\n  transactions?: Transaction[];\r\n}\r\n\r\nconst FinancialStats: React.FC<FinancialStatsProps> = ({ transactions = [] }) => {\r\n  // Calculate real data from transactions\r\n  const currentMonth = new Date().getMonth();\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  const currentMonthTransactions = transactions.filter(t => {\r\n    const transactionDate = new Date(t.date);\r\n    return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\r\n  });\r\n\r\n  const income = currentMonthTransactions.filter(t => t.type === 'income');\r\n  const expenses = currentMonthTransactions.filter(t => t.type === 'expense');\r\n\r\n  // Calculate expense categories\r\n  const expenseCategories = expenses.reduce((acc, transaction) => {\r\n    const category = transaction.category || 'Other';\r\n    if (!acc[category]) {\r\n      acc[category] = 0;\r\n    }\r\n    acc[category] += transaction.amount;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  const expenseData = Object.entries(expenseCategories).map(([name, value], index) => ({\r\n    name,\r\n    value,\r\n    color: ['#667eea', '#764ba2', '#f093fb', '#f5576c', '#4facfe', '#10b981', '#f59e0b'][index % 7]\r\n  }));\r\n\r\n  // Calculate monthly data for the last 6 months\r\n  const monthlyData = [];\r\n  for (let i = 5; i >= 0; i--) {\r\n    const date = new Date();\r\n    date.setMonth(date.getMonth() - i);\r\n    const monthName = date.toLocaleDateString('en-US', { month: 'short' });\r\n    \r\n    const monthTransactions = transactions.filter(t => {\r\n      const transactionDate = new Date(t.date);\r\n      return transactionDate.getMonth() === date.getMonth() && \r\n             transactionDate.getFullYear() === date.getFullYear();\r\n    });\r\n    \r\n    const monthIncome = monthTransactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    const monthExpenses = monthTransactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    monthlyData.push({\r\n      month: monthName,\r\n      income: monthIncome,\r\n      expenses: monthExpenses\r\n    });\r\n  }\r\n\r\n  const totalIncome = income.reduce((sum, t) => sum + t.amount, 0);\r\n  const totalExpenses = expenses.reduce((sum, t) => sum + t.amount, 0);\r\n  const savingsRate = totalIncome > 0 ? Math.round(((totalIncome - totalExpenses) / totalIncome) * 100) : 0;\r\n\r\n  // Calculate max value for bar scaling\r\n  const maxValue = Math.max(...monthlyData.map(d => Math.max(d.income, d.expenses)));\r\n\r\n  return (\r\n    <div className=\"financial-stats\">\r\n      <div className=\"stats-section\">\r\n        <h4>Monthly Expenses</h4>\r\n        {expenseData.length > 0 ? (\r\n          <>\r\n            <div className=\"expense-legend\">\r\n              {expenseData.map((item, index) => (\r\n                <div key={index} className=\"legend-item\">\r\n                  <div \r\n                    className=\"legend-color\" \r\n                    style={{ backgroundColor: item.color }}\r\n                  />\r\n                  <span className=\"legend-label\">{item.name}</span>\r\n                  <span className=\"legend-value\">${item.value.toFixed(2)}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', padding: '20px', color: '#888' }}>\r\n            No expenses recorded this month\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"stats-section\">\r\n        <h4>Income vs Expenses (Last 6 Months)</h4>\r\n        <div className=\"bar-chart-container\">\r\n          <div className=\"bar-chart\">\r\n            {monthlyData.map((data, index) => (\r\n              <div key={index} className=\"bar-group\">\r\n                <div className=\"bar-labels\">\r\n                  <span className=\"month-label\">{data.month}</span>\r\n                </div>\r\n                <div className=\"bars\">\r\n                  <div \r\n                    className=\"bar income-bar\" \r\n                    style={{ \r\n                      height: `${(data.income / maxValue) * 100}%`,\r\n                      backgroundColor: '#10b981'\r\n                    }}\r\n                    title={`Income: $${data.income.toFixed(2)}`}\r\n                  />\r\n                  <div \r\n                    className=\"bar expense-bar\" \r\n                    style={{ \r\n                      height: `${(data.expenses / maxValue) * 100}%`,\r\n                      backgroundColor: '#ef4444'\r\n                    }}\r\n                    title={`Expenses: $${data.expenses.toFixed(2)}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"chart-legend\">\r\n            <div className=\"chart-legend-item\">\r\n              <div className=\"legend-color\" style={{ backgroundColor: '#10b981' }} />\r\n              <span>Income</span>\r\n            </div>\r\n            <div className=\"chart-legend-item\">\r\n              <div className=\"legend-color\" style={{ backgroundColor: '#ef4444' }} />\r\n              <span>Expenses</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-summary\">\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Total Monthly Income</span>\r\n          <span className=\"summary-value positive\">${totalIncome.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Total Monthly Expenses</span>\r\n          <span className=\"summary-value\">${totalExpenses.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Net Balance</span>\r\n          <span className={`summary-value ${totalIncome - totalExpenses >= 0 ? 'positive' : ''}`}>\r\n            ${(totalIncome - totalExpenses).toFixed(2)}\r\n          </span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Savings Rate</span>\r\n          <span className=\"summary-value positive\">{savingsRate}%</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialStats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}