{"ast":null,"code":"import { supabase } from './supabaseClient';\n\n// Upload a file to Supabase Storage\nexport const uploadFile = async (file, bucketName = 'files', path) => {\n  try {\n    console.log('üì§ Uploading file:', file.name);\n\n    // Generate unique filename if no path provided\n    const fileName = path || `${Date.now()}-${file.name}`;\n    const {\n      data,\n      error\n    } = await supabase.storage.from(bucketName).upload(fileName, file);\n    if (error) {\n      console.error('‚ùå Upload failed:', error);\n      return {\n        success: false,\n        error,\n        data: null\n      };\n    }\n    console.log('‚úÖ File uploaded successfully:', data);\n    return {\n      success: true,\n      data,\n      error: null\n    };\n  } catch (err) {\n    console.error('‚ùå Upload error:', err);\n    return {\n      success: false,\n      error: err,\n      data: null\n    };\n  }\n};\n\n// Get public URL for a file\nexport const getPublicUrl = (bucketName, fileName) => {\n  try {\n    console.log('üîó Getting public URL for:', fileName);\n    const {\n      data\n    } = supabase.storage.from(bucketName).getPublicUrl(fileName);\n    console.log('‚úÖ Public URL generated:', data.publicUrl);\n    return {\n      success: true,\n      data: data.publicUrl,\n      error: null\n    };\n  } catch (err) {\n    console.error('‚ùå Get URL error:', err);\n    return {\n      success: false,\n      error: err,\n      data: null\n    };\n  }\n};\n\n// Download a file\nexport const downloadFile = async (bucketName, fileName) => {\n  try {\n    console.log('üì• Downloading file:', fileName);\n    const {\n      data,\n      error\n    } = await supabase.storage.from(bucketName).download(fileName);\n    if (error) {\n      console.error('‚ùå Download failed:', error);\n      return {\n        success: false,\n        error,\n        data: null\n      };\n    }\n    console.log('‚úÖ File downloaded successfully');\n    return {\n      success: true,\n      data,\n      error: null\n    };\n  } catch (err) {\n    console.error('‚ùå Download error:', err);\n    return {\n      success: false,\n      error: err,\n      data: null\n    };\n  }\n};\n\n// List files in a bucket\nexport const listFiles = async (bucketName, folder) => {\n  try {\n    console.log('üìã Listing files in bucket:', bucketName);\n    const {\n      data,\n      error\n    } = await supabase.storage.from(bucketName).list(folder);\n    if (error) {\n      console.error('‚ùå List files failed:', error);\n      return {\n        success: false,\n        error,\n        data: null\n      };\n    }\n    console.log('‚úÖ Files listed successfully:', data);\n    return {\n      success: true,\n      data,\n      error: null\n    };\n  } catch (err) {\n    console.error('‚ùå List files error:', err);\n    return {\n      success: false,\n      error: err,\n      data: null\n    };\n  }\n};\n\n// Delete a file\nexport const deleteFile = async (bucketName, fileName) => {\n  try {\n    console.log('üóëÔ∏è Deleting file:', fileName);\n    const {\n      data,\n      error\n    } = await supabase.storage.from(bucketName).remove([fileName]);\n    if (error) {\n      console.error('‚ùå Delete file failed:', error);\n      return {\n        success: false,\n        error,\n        data: null\n      };\n    }\n    console.log('‚úÖ File deleted successfully:', data);\n    return {\n      success: true,\n      data,\n      error: null\n    };\n  } catch (err) {\n    console.error('‚ùå Delete file error:', err);\n    return {\n      success: false,\n      error: err,\n      data: null\n    };\n  }\n};","map":{"version":3,"names":["supabase","uploadFile","file","bucketName","path","console","log","name","fileName","Date","now","data","error","storage","from","upload","success","err","getPublicUrl","publicUrl","downloadFile","download","listFiles","folder","list","deleteFile","remove"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/lib/supabaseStorage.ts"],"sourcesContent":["import { supabase } from './supabaseClient'\r\n\r\n// Upload a file to Supabase Storage\r\nexport const uploadFile = async (file: File, bucketName: string = 'files', path?: string) => {\r\n  try {\r\n    console.log('üì§ Uploading file:', file.name)\r\n    \r\n    // Generate unique filename if no path provided\r\n    const fileName = path || `${Date.now()}-${file.name}`\r\n    \r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .upload(fileName, file)\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Upload failed:', error)\r\n      return { success: false, error, data: null }\r\n    }\r\n    \r\n    console.log('‚úÖ File uploaded successfully:', data)\r\n    return { success: true, data, error: null }\r\n  } catch (err) {\r\n    console.error('‚ùå Upload error:', err)\r\n    return { success: false, error: err, data: null }\r\n  }\r\n}\r\n\r\n// Get public URL for a file\r\nexport const getPublicUrl = (bucketName: string, fileName: string) => {\r\n  try {\r\n    console.log('üîó Getting public URL for:', fileName)\r\n    \r\n    const { data } = supabase.storage\r\n      .from(bucketName)\r\n      .getPublicUrl(fileName)\r\n    \r\n    console.log('‚úÖ Public URL generated:', data.publicUrl)\r\n    return { success: true, data: data.publicUrl, error: null }\r\n  } catch (err) {\r\n    console.error('‚ùå Get URL error:', err)\r\n    return { success: false, error: err, data: null }\r\n  }\r\n}\r\n\r\n// Download a file\r\nexport const downloadFile = async (bucketName: string, fileName: string) => {\r\n  try {\r\n    console.log('üì• Downloading file:', fileName)\r\n    \r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .download(fileName)\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Download failed:', error)\r\n      return { success: false, error, data: null }\r\n    }\r\n    \r\n    console.log('‚úÖ File downloaded successfully')\r\n    return { success: true, data, error: null }\r\n  } catch (err) {\r\n    console.error('‚ùå Download error:', err)\r\n    return { success: false, error: err, data: null }\r\n  }\r\n}\r\n\r\n// List files in a bucket\r\nexport const listFiles = async (bucketName: string, folder?: string) => {\r\n  try {\r\n    console.log('üìã Listing files in bucket:', bucketName)\r\n    \r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .list(folder)\r\n    \r\n    if (error) {\r\n      console.error('‚ùå List files failed:', error)\r\n      return { success: false, error, data: null }\r\n    }\r\n    \r\n    console.log('‚úÖ Files listed successfully:', data)\r\n    return { success: true, data, error: null }\r\n  } catch (err) {\r\n    console.error('‚ùå List files error:', err)\r\n    return { success: false, error: err, data: null }\r\n  }\r\n}\r\n\r\n// Delete a file\r\nexport const deleteFile = async (bucketName: string, fileName: string) => {\r\n  try {\r\n    console.log('üóëÔ∏è Deleting file:', fileName)\r\n    \r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .remove([fileName])\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Delete file failed:', error)\r\n      return { success: false, error, data: null }\r\n    }\r\n    \r\n    console.log('‚úÖ File deleted successfully:', data)\r\n    return { success: true, data, error: null }\r\n  } catch (err) {\r\n    console.error('‚ùå Delete file error:', err)\r\n    return { success: false, error: err, data: null }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}