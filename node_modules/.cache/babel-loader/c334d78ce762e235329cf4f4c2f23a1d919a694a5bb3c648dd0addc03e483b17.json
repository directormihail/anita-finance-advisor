{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\n\n// Supabase configuration\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://kzregiqxflrvaxytdet.supabase.co';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtlenJlZ2lxZnhscnZheHl0ZGV0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc2OTY5MTgsImV4cCI6MjA3MzI3MjkxOH0.X4QWu0W31Kv_8KGQ6h_n4PYnQOMTX85CYbWJVbv2AxM';\n\n// Create Supabase client\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Test connection\nexport const testConnection = async () => {\n  try {\n    console.log('üîç Testing Supabase connection...');\n    const {\n      data,\n      error\n    } = await supabase.from('items').select('count').limit(1);\n    if (error) {\n      console.error('‚ùå Supabase connection failed:', error);\n      return {\n        success: false,\n        error\n      };\n    }\n    console.log('‚úÖ Supabase connection successful!');\n    return {\n      success: true,\n      data\n    };\n  } catch (err) {\n    console.error('‚ùå Supabase connection error:', err);\n    return {\n      success: false,\n      error: err\n    };\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseAnonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","supabase","testConnection","console","log","data","error","from","select","limit","success","err"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\n// Supabase configuration\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://kzregiqxflrvaxytdet.supabase.co'\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtlenJlZ2lxZnhscnZheHl0ZGV0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc2OTY5MTgsImV4cCI6MjA3MzI3MjkxOH0.X4QWu0W31Kv_8KGQ6h_n4PYnQOMTX85CYbWJVbv2AxM'\r\n\r\n// Create Supabase client\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\n// Test connection\r\nexport const testConnection = async () => {\r\n  try {\r\n    console.log('üîç Testing Supabase connection...')\r\n    const { data, error } = await supabase.from('items').select('count').limit(1)\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Supabase connection failed:', error)\r\n      return { success: false, error }\r\n    }\r\n    \r\n    console.log('‚úÖ Supabase connection successful!')\r\n    return { success: true, data }\r\n  } catch (err) {\r\n    console.error('‚ùå Supabase connection error:', err)\r\n    return { success: false, error: err }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;;AAEpD;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,IAAI,yCAAyC;AACrG,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,6BAA6B,IAAI,kNAAkN;;AAEvR;AACA,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;;AAElE;AACA,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IAE7E,IAAIH,KAAK,EAAE;MACTH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO;QAAEI,OAAO,EAAE,KAAK;QAAEJ;MAAM,CAAC;IAClC;IAEAH,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAO;MAAEM,OAAO,EAAE,IAAI;MAAEL;IAAK,CAAC;EAChC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZR,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEK,GAAG,CAAC;IAClD,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEJ,KAAK,EAAEK;IAAI,CAAC;EACvC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}