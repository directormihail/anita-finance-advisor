{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dzm13\\\\anita-finance-advisor\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  onTransactionAdd\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: \"Hey! Any new expenses or incomes today?\",\n    sender: 'anita',\n    timestamp: new Date()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const parseTransaction = message => {\n    const incomeRegex = /(?:income|earned|made|received)\\s+\\$?(\\d+(?:\\.\\d{2})?)\\s*(?:from|for|at)?\\s*(.+)/i;\n    const expenseRegex = /(?:spent|expense|bought|paid)\\s+\\$?(\\d+(?:\\.\\d{2})?)\\s*(?:on|for|at)?\\s*(.+)/i;\n    const incomeMatch = message.match(incomeRegex);\n    const expenseMatch = message.match(expenseRegex);\n    if (incomeMatch) {\n      return {\n        id: Date.now().toString(),\n        type: 'income',\n        amount: parseFloat(incomeMatch[1]),\n        category: 'Income',\n        description: incomeMatch[2].trim(),\n        date: new Date()\n      };\n    }\n    if (expenseMatch) {\n      return {\n        id: Date.now().toString(),\n        type: 'expense',\n        amount: parseFloat(expenseMatch[1]),\n        category: 'Expense',\n        description: expenseMatch[2].trim(),\n        date: new Date()\n      };\n    }\n    return null;\n  };\n  const getAnitaResponse = (userMessage, transaction) => {\n    if (transaction) {\n      if (transaction.type === 'income') {\n        return `Nice! ðŸ’° I've added $${transaction.amount} income for \"${transaction.description}\" to your records. Keep that money flowing! ðŸ’…`;\n      } else {\n        return `Got it! ðŸ’¸ I've recorded $${transaction.amount} expense for \"${transaction.description}\". Let's keep track of those spending habits! ðŸ˜‰`;\n      }\n    }\n    const responses = [\"Tell me about your money moves! ðŸ’° You can say things like 'I spent $50 on groceries' or 'I earned $200 from freelancing'\", \"What's the financial tea today? â˜• Share your income or expenses with me!\", \"Spill the financial beans! ðŸ’… I'm here to track your money flow\", \"Let's talk money! ðŸ’¸ Share what you've earned or spent today\", \"What's happening with your wallet? ðŸ’³ Tell me about any transactions!\", \"Money talk time! ðŸ’° Share your income or expenses with me\", \"Let's get financial! ðŸ“Š Tell me about your money moves today\", \"What's the financial update? ðŸ’… I'm ready to track your transactions!\"];\n    return responses[Math.floor(Math.random() * responses.length)];\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n    const transaction = parseTransaction(inputText);\n    const userMessage = {\n      id: Date.now().toString(),\n      text: inputText,\n      sender: 'user',\n      timestamp: new Date(),\n      transaction: transaction || undefined\n    };\n    setMessages(prev => [...prev, userMessage]);\n    if (transaction) {\n      setTransactions(prev => [...prev, transaction]);\n      onTransactionAdd === null || onTransactionAdd === void 0 ? void 0 : onTransactionAdd(transaction);\n    }\n    setInputText('');\n    setIsTyping(true);\n\n    // Simulate ANITA typing\n    setTimeout(() => {\n      const anitaResponse = {\n        id: (Date.now() + 1).toString(),\n        text: getAnitaResponse(inputText, transaction || undefined),\n        sender: 'anita',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, anitaResponse]);\n      setIsTyping(false);\n    }, 1500);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"ANITA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: message.sender === 'anita' ? /*#__PURE__*/_jsxDEV(Bot, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(User, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), message.transaction && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `transaction-info ${message.transaction.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-amount\",\n              children: [message.transaction.type === 'income' ? '+' : '-', \"$\", message.transaction.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transaction-desc\",\n              children: message.transaction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: message.timestamp.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message anita\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: /*#__PURE__*/_jsxDEV(Bot, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask ANITA about your finances...\",\n          rows: 1,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputText.trim() || isTyping,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"me3V5O1ZbagUBpeAw4Vt+mlZhOo=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Bot","User","jsxDEV","_jsxDEV","ChatInterface","onTransactionAdd","_s","messages","setMessages","id","text","sender","timestamp","Date","inputText","setInputText","isTyping","setIsTyping","transactions","setTransactions","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","parseTransaction","message","incomeRegex","expenseRegex","incomeMatch","match","expenseMatch","now","toString","type","amount","parseFloat","category","description","trim","date","getAnitaResponse","userMessage","transaction","responses","Math","floor","random","length","handleSendMessage","undefined","prev","setTimeout","anitaResponse","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","size","toLocaleTimeString","hour","minute","ref","value","onChange","target","onKeyPress","placeholder","rows","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, Bot, User } from 'lucide-react';\r\nimport './ChatInterface.css';\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'anita';\r\n  timestamp: Date;\r\n  transaction?: {\r\n    type: 'income' | 'expense';\r\n    amount: number;\r\n    category: string;\r\n    description: string;\r\n  };\r\n}\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'income' | 'expense';\r\n  amount: number;\r\n  category: string;\r\n  description: string;\r\n  date: Date;\r\n}\r\n\r\ninterface ChatInterfaceProps {\r\n  onTransactionAdd?: (transaction: Transaction) => void;\r\n}\r\n\r\nconst ChatInterface: React.FC<ChatInterfaceProps> = ({ onTransactionAdd }) => {\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: \"Hey! Any new expenses or incomes today?\",\r\n      sender: 'anita',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const parseTransaction = (message: string): Transaction | null => {\r\n    const incomeRegex = /(?:income|earned|made|received)\\s+\\$?(\\d+(?:\\.\\d{2})?)\\s*(?:from|for|at)?\\s*(.+)/i;\r\n    const expenseRegex = /(?:spent|expense|bought|paid)\\s+\\$?(\\d+(?:\\.\\d{2})?)\\s*(?:on|for|at)?\\s*(.+)/i;\r\n    \r\n    const incomeMatch = message.match(incomeRegex);\r\n    const expenseMatch = message.match(expenseRegex);\r\n    \r\n    if (incomeMatch) {\r\n      return {\r\n        id: Date.now().toString(),\r\n        type: 'income',\r\n        amount: parseFloat(incomeMatch[1]),\r\n        category: 'Income',\r\n        description: incomeMatch[2].trim(),\r\n        date: new Date()\r\n      };\r\n    }\r\n    \r\n    if (expenseMatch) {\r\n      return {\r\n        id: Date.now().toString(),\r\n        type: 'expense',\r\n        amount: parseFloat(expenseMatch[1]),\r\n        category: 'Expense',\r\n        description: expenseMatch[2].trim(),\r\n        date: new Date()\r\n      };\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const getAnitaResponse = (userMessage: string, transaction?: Transaction): string => {\r\n    if (transaction) {\r\n      if (transaction.type === 'income') {\r\n        return `Nice! ðŸ’° I've added $${transaction.amount} income for \"${transaction.description}\" to your records. Keep that money flowing! ðŸ’…`;\r\n      } else {\r\n        return `Got it! ðŸ’¸ I've recorded $${transaction.amount} expense for \"${transaction.description}\". Let's keep track of those spending habits! ðŸ˜‰`;\r\n      }\r\n    }\r\n    \r\n    const responses = [\r\n      \"Tell me about your money moves! ðŸ’° You can say things like 'I spent $50 on groceries' or 'I earned $200 from freelancing'\",\r\n      \"What's the financial tea today? â˜• Share your income or expenses with me!\",\r\n      \"Spill the financial beans! ðŸ’… I'm here to track your money flow\",\r\n      \"Let's talk money! ðŸ’¸ Share what you've earned or spent today\",\r\n      \"What's happening with your wallet? ðŸ’³ Tell me about any transactions!\",\r\n      \"Money talk time! ðŸ’° Share your income or expenses with me\",\r\n      \"Let's get financial! ðŸ“Š Tell me about your money moves today\",\r\n      \"What's the financial update? ðŸ’… I'm ready to track your transactions!\"\r\n    ];\r\n    \r\n    return responses[Math.floor(Math.random() * responses.length)];\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputText.trim()) return;\r\n\r\n    const transaction = parseTransaction(inputText);\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text: inputText,\r\n      sender: 'user',\r\n      timestamp: new Date(),\r\n      transaction: transaction || undefined\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    \r\n    if (transaction) {\r\n      setTransactions(prev => [...prev, transaction]);\r\n      onTransactionAdd?.(transaction);\r\n    }\r\n    \r\n    setInputText('');\r\n    setIsTyping(true);\r\n\r\n    // Simulate ANITA typing\r\n    setTimeout(() => {\r\n      const anitaResponse: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        text: getAnitaResponse(inputText, transaction || undefined),\r\n        sender: 'anita',\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      setMessages(prev => [...prev, anitaResponse]);\r\n      setIsTyping(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-interface\">\r\n      <div className=\"chat-header\">\r\n        <h1 className=\"main-title\">ANITA</h1>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message) => (\r\n          <div key={message.id} className={`message ${message.sender}`}>\r\n            <div className=\"message-avatar\">\r\n              {message.sender === 'anita' ? <Bot size={20} /> : <User size={20} />}\r\n            </div>\r\n            <div className=\"message-content\">\r\n              <div className=\"message-text\">{message.text}</div>\r\n              {message.transaction && (\r\n                <div className={`transaction-info ${message.transaction.type}`}>\r\n                  <span className=\"transaction-amount\">\r\n                    {message.transaction.type === 'income' ? '+' : '-'}${message.transaction.amount}\r\n                  </span>\r\n                  <span className=\"transaction-desc\">{message.transaction.description}</span>\r\n                </div>\r\n              )}\r\n              <div className=\"message-time\">\r\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {isTyping && (\r\n          <div className=\"message anita\">\r\n            <div className=\"message-avatar\">\r\n              <Bot size={20} />\r\n            </div>\r\n            <div className=\"message-content\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <div className=\"chat-input\">\r\n          <textarea\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask ANITA about your finances...\"\r\n            rows={1}\r\n            className=\"input-field\"\r\n          />\r\n          <button \r\n            onClick={handleSendMessage}\r\n            disabled={!inputText.trim() || isTyping}\r\n            className=\"send-button\"\r\n          >\r\n            <Send size={20} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,cAAc;AAC9C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA4B7B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAY,CAClD;IACEa,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,yCAAyC;IAC/CC,MAAM,EAAE,OAAO;IACfC,SAAS,EAAE,IAAIC,IAAI,CAAC;EACtB,CAAC,CACF,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAgB,EAAE,CAAC;EACnE,MAAMwB,cAAc,GAAGvB,MAAM,CAAiB,IAAI,CAAC;EAEnD,MAAMwB,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED3B,SAAS,CAAC,MAAM;IACduB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMmB,gBAAgB,GAAIC,OAAe,IAAyB;IAChE,MAAMC,WAAW,GAAG,mFAAmF;IACvG,MAAMC,YAAY,GAAG,+EAA+E;IAEpG,MAAMC,WAAW,GAAGH,OAAO,CAACI,KAAK,CAACH,WAAW,CAAC;IAC9C,MAAMI,YAAY,GAAGL,OAAO,CAACI,KAAK,CAACF,YAAY,CAAC;IAEhD,IAAIC,WAAW,EAAE;MACf,OAAO;QACLrB,EAAE,EAAEI,IAAI,CAACoB,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,IAAI,EAAE,QAAQ;QACdC,MAAM,EAAEC,UAAU,CAACP,WAAW,CAAC,CAAC,CAAC,CAAC;QAClCQ,QAAQ,EAAE,QAAQ;QAClBC,WAAW,EAAET,WAAW,CAAC,CAAC,CAAC,CAACU,IAAI,CAAC,CAAC;QAClCC,IAAI,EAAE,IAAI5B,IAAI,CAAC;MACjB,CAAC;IACH;IAEA,IAAImB,YAAY,EAAE;MAChB,OAAO;QACLvB,EAAE,EAAEI,IAAI,CAACoB,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAEC,UAAU,CAACL,YAAY,CAAC,CAAC,CAAC,CAAC;QACnCM,QAAQ,EAAE,SAAS;QACnBC,WAAW,EAAEP,YAAY,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC;QACnCC,IAAI,EAAE,IAAI5B,IAAI,CAAC;MACjB,CAAC;IACH;IAEA,OAAO,IAAI;EACb,CAAC;EAED,MAAM6B,gBAAgB,GAAGA,CAACC,WAAmB,EAAEC,WAAyB,KAAa;IACnF,IAAIA,WAAW,EAAE;MACf,IAAIA,WAAW,CAACT,IAAI,KAAK,QAAQ,EAAE;QACjC,OAAO,wBAAwBS,WAAW,CAACR,MAAM,gBAAgBQ,WAAW,CAACL,WAAW,gDAAgD;MAC1I,CAAC,MAAM;QACL,OAAO,6BAA6BK,WAAW,CAACR,MAAM,iBAAiBQ,WAAW,CAACL,WAAW,kDAAkD;MAClJ;IACF;IAEA,MAAMM,SAAS,GAAG,CAChB,2HAA2H,EAC3H,0EAA0E,EAC1E,iEAAiE,EACjE,8DAA8D,EAC9D,uEAAuE,EACvE,2DAA2D,EAC3D,8DAA8D,EAC9D,uEAAuE,CACxE;IAED,OAAOA,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACpC,SAAS,CAAC0B,IAAI,CAAC,CAAC,EAAE;IAEvB,MAAMI,WAAW,GAAGlB,gBAAgB,CAACZ,SAAS,CAAC;IAC/C,MAAM6B,WAAoB,GAAG;MAC3BlC,EAAE,EAAEI,IAAI,CAACoB,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBxB,IAAI,EAAEI,SAAS;MACfH,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;MACrB+B,WAAW,EAAEA,WAAW,IAAIO;IAC9B,CAAC;IAED3C,WAAW,CAAC4C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAET,WAAW,CAAC,CAAC;IAE3C,IAAIC,WAAW,EAAE;MACfzB,eAAe,CAACiC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAER,WAAW,CAAC,CAAC;MAC/CvC,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAGuC,WAAW,CAAC;IACjC;IAEA7B,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,IAAI,CAAC;;IAEjB;IACAoC,UAAU,CAAC,MAAM;MACf,MAAMC,aAAsB,GAAG;QAC7B7C,EAAE,EAAE,CAACI,IAAI,CAACoB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC;QAC/BxB,IAAI,EAAEgC,gBAAgB,CAAC5B,SAAS,EAAE8B,WAAW,IAAIO,SAAS,CAAC;QAC3DxC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC;MAEDL,WAAW,CAAC4C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,aAAa,CAAC,CAAC;MAC7CrC,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMsC,cAAc,GAAIC,CAAsB,IAAK;IACjD,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBT,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACE/C,OAAA;IAAKyD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1D,OAAA;MAAKyD,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B1D,OAAA;QAAIyD,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BtD,QAAQ,CAAC2D,GAAG,CAAEvC,OAAO,iBACpBxB,OAAA;QAAsByD,SAAS,EAAE,WAAWjC,OAAO,CAAChB,MAAM,EAAG;QAAAkD,QAAA,gBAC3D1D,OAAA;UAAKyD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BlC,OAAO,CAAChB,MAAM,KAAK,OAAO,gBAAGR,OAAA,CAACH,GAAG;YAACmE,IAAI,EAAE;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG9D,OAAA,CAACF,IAAI;YAACkE,IAAI,EAAE;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACN9D,OAAA;UAAKyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B1D,OAAA;YAAKyD,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAElC,OAAO,CAACjB;UAAI;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACjDtC,OAAO,CAACiB,WAAW,iBAClBzC,OAAA;YAAKyD,SAAS,EAAE,oBAAoBjC,OAAO,CAACiB,WAAW,CAACT,IAAI,EAAG;YAAA0B,QAAA,gBAC7D1D,OAAA;cAAMyD,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GACjClC,OAAO,CAACiB,WAAW,CAACT,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC,EAACR,OAAO,CAACiB,WAAW,CAACR,MAAM;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CAAC,eACP9D,OAAA;cAAMyD,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAElC,OAAO,CAACiB,WAAW,CAACL;YAAW;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CACN,eACD9D,OAAA;YAAKyD,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BlC,OAAO,CAACf,SAAS,CAACwD,kBAAkB,CAAC,EAAE,EAAE;cAAEC,IAAI,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAU,CAAC;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAjBEtC,OAAO,CAAClB,EAAE;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBf,CACN,CAAC,EAEDjD,QAAQ,iBACPb,OAAA;QAAKyD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1D,OAAA;UAAKyD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7B1D,OAAA,CAACH,GAAG;YAACmE,IAAI,EAAE;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACN9D,OAAA;UAAKyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9B1D,OAAA;YAAKyD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B1D,OAAA;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9D,OAAA;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9D,OAAA;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED9D,OAAA;QAAKoE,GAAG,EAAEnD;MAAe;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnC1D,OAAA;QAAKyD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1D,OAAA;UACEqE,KAAK,EAAE1D,SAAU;UACjB2D,QAAQ,EAAGjB,CAAC,IAAKzC,YAAY,CAACyC,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC9CG,UAAU,EAAEpB,cAAe;UAC3BqB,WAAW,EAAC,kCAAkC;UAC9CC,IAAI,EAAE,CAAE;UACRjB,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACF9D,OAAA;UACE2E,OAAO,EAAE5B,iBAAkB;UAC3B6B,QAAQ,EAAE,CAACjE,SAAS,CAAC0B,IAAI,CAAC,CAAC,IAAIxB,QAAS;UACxC4C,SAAS,EAAC,aAAa;UAAAC,QAAA,eAEvB1D,OAAA,CAACJ,IAAI;YAACoE,IAAI,EAAE;UAAG;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3D,EAAA,CA5LIF,aAA2C;AAAA4E,EAAA,GAA3C5E,aAA2C;AA8LjD,eAAeA,aAAa;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}