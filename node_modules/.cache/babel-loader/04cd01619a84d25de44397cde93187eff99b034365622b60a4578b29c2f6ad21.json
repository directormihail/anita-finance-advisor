{"ast":null,"code":"import _objectSpread from\"C:/Users/dzm13/anita-finance-advisor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Sidebar from'./components/Sidebar';import ChatInterface from'./components/ChatInterface';import Settings from'./components/Settings';import FinancePage from'./components/FinancePage';import{transactionsApi,usersApi}from'./supabase';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[currentView,setCurrentView]=useState('chat');const[transactions,setTransactions]=useState([]);const[messages,setMessages]=useState([{id:'1',text:\"Hey! Any new expenses or incomes today?\",sender:'anita',timestamp:new Date()}]);const[theme,setTheme]=useState('dark');const[currentUserId,setCurrentUserId]=useState(null);// Load theme, transactions, and messages on mount\nuseEffect(()=>{const loadData=async()=>{// Load theme from localStorage\nconst savedTheme=localStorage.getItem('anita-theme');if(savedTheme){setTheme(savedTheme);}// Get or create default user\ntry{console.log('🔄 Getting/creating default user...');const{data:user,error:userError}=await usersApi.getOrCreateDefaultUser();if(userError){console.error('❌ Error getting/creating user:',userError);}else{setCurrentUserId(user.id);console.log('✅ User ready:',user.username);}}catch(error){console.error('❌ Error with user management:',error);}// Load transactions from Supabase\ntry{console.log('🔄 Loading transactions from Supabase...');const{data,error}=await transactionsApi.fetchTransactions();if(error){console.error('❌ Error loading transactions from Supabase:',error);// Fallback to localStorage if Supabase fails\nconst savedTransactions=localStorage.getItem('anita-transactions');if(savedTransactions){try{const parsed=JSON.parse(savedTransactions);const transactionsWithDates=parsed.map(t=>_objectSpread(_objectSpread({},t),{},{date:new Date(t.date)}));setTransactions(transactionsWithDates);console.log('📱 Loaded transactions from localStorage fallback');}catch(error){console.error('Error loading transactions from localStorage:',error);}}}else{// Convert Supabase data to local format\nconst transactionsWithDates=(data||[]).map(t=>({id:t.id.toString(),type:t.type,amount:parseFloat(t.amount),category:t.category,description:t.description,date:new Date(t.date)}));setTransactions(transactionsWithDates);console.log(\"\\u2705 Loaded \".concat(transactionsWithDates.length,\" transactions from Supabase\"));}}catch(error){console.error('❌ Error loading transactions:',error);// Fallback to localStorage\nconst savedTransactions=localStorage.getItem('anita-transactions');if(savedTransactions){try{const parsed=JSON.parse(savedTransactions);const transactionsWithDates=parsed.map(t=>_objectSpread(_objectSpread({},t),{},{date:new Date(t.date)}));setTransactions(transactionsWithDates);console.log('📱 Loaded transactions from localStorage fallback');}catch(error){console.error('Error loading transactions from localStorage:',error);}}}// Load messages from localStorage (keeping this local for now)\nconst savedMessages=localStorage.getItem('anita-messages');if(savedMessages){try{const parsed=JSON.parse(savedMessages);const messagesWithDates=parsed.map(m=>_objectSpread(_objectSpread({},m),{},{timestamp:new Date(m.timestamp)}));setMessages(messagesWithDates);}catch(error){console.error('Error loading messages from localStorage:',error);}}};loadData();},[]);// Auto-refresh transactions from Supabase every 30 seconds\nuseEffect(()=>{const interval=setInterval(()=>{refreshTransactionsFromSupabase();},30000);// 30 seconds\nreturn()=>clearInterval(interval);},[]);// Apply theme to document\nuseEffect(()=>{document.documentElement.setAttribute('data-theme',theme);localStorage.setItem('anita-theme',theme);},[theme]);const handleTransactionAdd=transaction=>{const newTransactions=[...transactions,transaction];setTransactions(newTransactions);// Save to localStorage as backup\nlocalStorage.setItem('anita-transactions',JSON.stringify(newTransactions));console.log('✅ Transaction added to local state:',transaction);};// Function to refresh transactions from Supabase\nconst refreshTransactionsFromSupabase=async()=>{if(!currentUserId)return;// Don't refresh if no user ID\ntry{console.log('🔄 Refreshing transactions from Supabase...');const{data,error}=await transactionsApi.fetchTransactions(currentUserId);if(error){console.error('❌ Error refreshing transactions:',error);return;}// Convert Supabase data to local format\nconst transactionsWithDates=(data||[]).map(t=>({id:t.id.toString(),type:t.type,amount:parseFloat(t.amount),category:t.category,description:t.description,date:new Date(t.date)}));setTransactions(transactionsWithDates);console.log(\"\\u2705 Refreshed \".concat(transactionsWithDates.length,\" transactions from Supabase\"));}catch(error){console.error('❌ Error refreshing transactions:',error);}};const handleMessageAdd=message=>{const newMessages=[...messages,message];setMessages(newMessages);// Save to localStorage\nlocalStorage.setItem('anita-messages',JSON.stringify(newMessages));};const handleThemeChange=newTheme=>{setTheme(newTheme);};// Calculate financial summary\nconst totalIncome=transactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0);const totalExpenses=transactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+t.amount,0);const netBalance=totalIncome-totalExpenses;// Get all transactions sorted by date (newest first)\nconst allTransactions=[...transactions].sort((a,b)=>new Date(b.date).getTime()-new Date(a.date).getTime());return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Sidebar,{onViewChange:setCurrentView,currentView:currentView,totalBalance:netBalance,monthlyIncome:totalIncome,monthlyExpenses:totalExpenses,recentTransactions:allTransactions}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[currentView==='chat'&&/*#__PURE__*/_jsx(ChatInterface,{onTransactionAdd:handleTransactionAdd,onMessageAdd:handleMessageAdd,messages:messages,currentUserId:currentUserId}),currentView==='settings'&&/*#__PURE__*/_jsx(Settings,{onThemeChange:handleThemeChange,currentTheme:theme}),currentView==='finance'&&/*#__PURE__*/_jsx(FinancePage,{transactions:transactions})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Sidebar","ChatInterface","Settings","FinancePage","transactionsApi","usersApi","jsx","_jsx","jsxs","_jsxs","App","currentView","setCurrentView","transactions","setTransactions","messages","setMessages","id","text","sender","timestamp","Date","theme","setTheme","currentUserId","setCurrentUserId","loadData","savedTheme","localStorage","getItem","console","log","data","user","error","userError","getOrCreateDefaultUser","username","fetchTransactions","savedTransactions","parsed","JSON","parse","transactionsWithDates","map","t","_objectSpread","date","toString","type","amount","parseFloat","category","description","concat","length","savedMessages","messagesWithDates","m","interval","setInterval","refreshTransactionsFromSupabase","clearInterval","document","documentElement","setAttribute","setItem","handleTransactionAdd","transaction","newTransactions","stringify","handleMessageAdd","message","newMessages","handleThemeChange","newTheme","totalIncome","filter","reduce","sum","totalExpenses","netBalance","allTransactions","sort","a","b","getTime","className","children","onViewChange","totalBalance","monthlyIncome","monthlyExpenses","recentTransactions","onTransactionAdd","onMessageAdd","onThemeChange","currentTheme"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport Settings from './components/Settings';\r\nimport FinancePage from './components/FinancePage';\r\nimport { transactionsApi, usersApi } from './supabase';\r\nimport './App.css';\r\n\r\ntype ViewType = 'chat' | 'settings' | 'finance';\r\ntype Theme = 'dark' | 'light';\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'income' | 'expense';\r\n  amount: number;\r\n  category: string;\r\n  description: string;\r\n  date: Date;\r\n}\r\n\r\ninterface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'anita';\r\n  timestamp: Date;\r\n  transaction?: {\r\n    type: 'income' | 'expense';\r\n    amount: number;\r\n    category: string;\r\n    description: string;\r\n  };\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [currentView, setCurrentView] = useState<ViewType>('chat');\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: '1',\r\n      text: \"Hey! Any new expenses or incomes today?\",\r\n      sender: 'anita',\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [theme, setTheme] = useState<Theme>('dark');\r\n  const [currentUserId, setCurrentUserId] = useState<string | null>(null);\r\n\r\n  // Load theme, transactions, and messages on mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      // Load theme from localStorage\r\n      const savedTheme = localStorage.getItem('anita-theme') as Theme;\r\n      if (savedTheme) {\r\n        setTheme(savedTheme);\r\n      }\r\n\r\n      // Get or create default user\r\n      try {\r\n        console.log('🔄 Getting/creating default user...');\r\n        const { data: user, error: userError } = await usersApi.getOrCreateDefaultUser();\r\n        if (userError) {\r\n          console.error('❌ Error getting/creating user:', userError);\r\n        } else {\r\n          setCurrentUserId(user.id);\r\n          console.log('✅ User ready:', user.username);\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error with user management:', error);\r\n      }\r\n\r\n      // Load transactions from Supabase\r\n      try {\r\n        console.log('🔄 Loading transactions from Supabase...');\r\n        const { data, error } = await transactionsApi.fetchTransactions();\r\n        if (error) {\r\n          console.error('❌ Error loading transactions from Supabase:', error);\r\n          // Fallback to localStorage if Supabase fails\r\n          const savedTransactions = localStorage.getItem('anita-transactions');\r\n          if (savedTransactions) {\r\n            try {\r\n              const parsed = JSON.parse(savedTransactions);\r\n              const transactionsWithDates = parsed.map((t: any) => ({\r\n                ...t,\r\n                date: new Date(t.date)\r\n              }));\r\n              setTransactions(transactionsWithDates);\r\n              console.log('📱 Loaded transactions from localStorage fallback');\r\n            } catch (error) {\r\n              console.error('Error loading transactions from localStorage:', error);\r\n            }\r\n          }\r\n        } else {\r\n          // Convert Supabase data to local format\r\n          const transactionsWithDates = (data || []).map((t: any) => ({\r\n            id: t.id.toString(),\r\n            type: t.type,\r\n            amount: parseFloat(t.amount),\r\n            category: t.category,\r\n            description: t.description,\r\n            date: new Date(t.date)\r\n          }));\r\n          setTransactions(transactionsWithDates);\r\n          console.log(`✅ Loaded ${transactionsWithDates.length} transactions from Supabase`);\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Error loading transactions:', error);\r\n        // Fallback to localStorage\r\n        const savedTransactions = localStorage.getItem('anita-transactions');\r\n        if (savedTransactions) {\r\n          try {\r\n            const parsed = JSON.parse(savedTransactions);\r\n            const transactionsWithDates = parsed.map((t: any) => ({\r\n              ...t,\r\n              date: new Date(t.date)\r\n            }));\r\n            setTransactions(transactionsWithDates);\r\n            console.log('📱 Loaded transactions from localStorage fallback');\r\n          } catch (error) {\r\n            console.error('Error loading transactions from localStorage:', error);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Load messages from localStorage (keeping this local for now)\r\n      const savedMessages = localStorage.getItem('anita-messages');\r\n      if (savedMessages) {\r\n        try {\r\n          const parsed = JSON.parse(savedMessages);\r\n          const messagesWithDates = parsed.map((m: any) => ({\r\n            ...m,\r\n            timestamp: new Date(m.timestamp)\r\n          }));\r\n          setMessages(messagesWithDates);\r\n        } catch (error) {\r\n          console.error('Error loading messages from localStorage:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Auto-refresh transactions from Supabase every 30 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      refreshTransactionsFromSupabase();\r\n    }, 30000); // 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Apply theme to document\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    localStorage.setItem('anita-theme', theme);\r\n  }, [theme]);\r\n\r\n  const handleTransactionAdd = (transaction: Transaction) => {\r\n    const newTransactions = [...transactions, transaction];\r\n    setTransactions(newTransactions);\r\n    // Save to localStorage as backup\r\n    localStorage.setItem('anita-transactions', JSON.stringify(newTransactions));\r\n    console.log('✅ Transaction added to local state:', transaction);\r\n  };\r\n\r\n  // Function to refresh transactions from Supabase\r\n  const refreshTransactionsFromSupabase = async () => {\r\n    if (!currentUserId) return; // Don't refresh if no user ID\r\n    \r\n    try {\r\n      console.log('🔄 Refreshing transactions from Supabase...');\r\n      const { data, error } = await transactionsApi.fetchTransactions(currentUserId);\r\n      if (error) {\r\n        console.error('❌ Error refreshing transactions:', error);\r\n        return;\r\n      }\r\n      \r\n      // Convert Supabase data to local format\r\n      const transactionsWithDates = (data || []).map((t: any) => ({\r\n        id: t.id.toString(),\r\n        type: t.type,\r\n        amount: parseFloat(t.amount),\r\n        category: t.category,\r\n        description: t.description,\r\n        date: new Date(t.date)\r\n      }));\r\n      \r\n      setTransactions(transactionsWithDates);\r\n      console.log(`✅ Refreshed ${transactionsWithDates.length} transactions from Supabase`);\r\n    } catch (error) {\r\n      console.error('❌ Error refreshing transactions:', error);\r\n    }\r\n  };\r\n\r\n  const handleMessageAdd = (message: Message) => {\r\n    const newMessages = [...messages, message];\r\n    setMessages(newMessages);\r\n    // Save to localStorage\r\n    localStorage.setItem('anita-messages', JSON.stringify(newMessages));\r\n  };\r\n\r\n  const handleThemeChange = (newTheme: Theme) => {\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  // Calculate financial summary\r\n  const totalIncome = transactions\r\n    .filter(t => t.type === 'income')\r\n    .reduce((sum, t) => sum + t.amount, 0);\r\n  \r\n  const totalExpenses = transactions\r\n    .filter(t => t.type === 'expense')\r\n    .reduce((sum, t) => sum + t.amount, 0);\r\n  \r\n  const netBalance = totalIncome - totalExpenses;\r\n  \r\n  // Get all transactions sorted by date (newest first)\r\n  const allTransactions = [...transactions]\r\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar \r\n        onViewChange={setCurrentView} \r\n        currentView={currentView}\r\n        totalBalance={netBalance}\r\n        monthlyIncome={totalIncome}\r\n        monthlyExpenses={totalExpenses}\r\n        recentTransactions={allTransactions}\r\n      />\r\n      <div className=\"main-content\">\r\n        {currentView === 'chat' && (\r\n          <ChatInterface \r\n            onTransactionAdd={handleTransactionAdd} \r\n            onMessageAdd={handleMessageAdd} \r\n            messages={messages}\r\n            currentUserId={currentUserId}\r\n          />\r\n        )}\r\n        {currentView === 'settings' && <Settings onThemeChange={handleThemeChange} currentTheme={theme} />}\r\n        {currentView === 'finance' && <FinancePage transactions={transactions} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}