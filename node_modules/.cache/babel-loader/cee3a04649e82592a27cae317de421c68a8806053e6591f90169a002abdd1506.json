{"ast":null,"code":"import React from'react';import{PieChart,Pie,Cell,ResponsiveContainer,BarChart,Bar,XAxis,YAxis,Tooltip}from'recharts';import'./FinancialStats.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FinancialStats=_ref=>{let{transactions=[]}=_ref;// Calculate real data from transactions\nconst currentMonth=new Date().getMonth();const currentYear=new Date().getFullYear();const currentMonthTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const income=currentMonthTransactions.filter(t=>t.type==='income');const expenses=currentMonthTransactions.filter(t=>t.type==='expense');// Calculate expense categories\nconst expenseCategories=expenses.reduce((acc,transaction)=>{const category=transaction.category||'Other';if(!acc[category]){acc[category]=0;}acc[category]+=transaction.amount;return acc;},{});const expenseData=Object.entries(expenseCategories).map((_ref2,index)=>{let[name,value]=_ref2;return{name,value,color:['#667eea','#764ba2','#f093fb','#f5576c','#4facfe','#10b981','#f59e0b'][index%7]};});// Calculate monthly data for the last 6 months\nconst monthlyData=[];for(let i=5;i>=0;i--){const date=new Date();date.setMonth(date.getMonth()-i);const monthName=date.toLocaleDateString('en-US',{month:'short'});const monthTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===date.getMonth()&&transactionDate.getFullYear()===date.getFullYear();});const monthIncome=monthTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0);const monthExpenses=monthTransactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+t.amount,0);monthlyData.push({month:monthName,income:monthIncome,expenses:monthExpenses});}const totalIncome=income.reduce((sum,t)=>sum+t.amount,0);const totalExpenses=expenses.reduce((sum,t)=>sum+t.amount,0);const savingsRate=totalIncome>0?Math.round((totalIncome-totalExpenses)/totalIncome*100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"financial-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Monthly Expenses\"}),expenseData.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"pie-chart-container\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:150,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:expenseData,cx:\"50%\",cy:\"50%\",innerRadius:40,outerRadius:60,paddingAngle:2,dataKey:\"value\",children:expenseData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"$\".concat(value),'Amount'],contentStyle:{backgroundColor:'#2a2a2a',border:'1px solid #444',borderRadius:'8px',color:'#fff'}})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"expense-legend\",children:expenseData.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:item.color}}),/*#__PURE__*/_jsx(\"span\",{className:\"legend-label\",children:item.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"legend-value\",children:[\"$\",item.value.toFixed(2)]})]},index))})]}):/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'20px',color:'#888'},children:\"No expenses recorded this month\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Income vs Expenses\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bar-chart-container\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:120,children:/*#__PURE__*/_jsxs(BarChart,{data:monthlyData,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\",axisLine:false,tickLine:false,tick:{fill:'#888',fontSize:12}}),/*#__PURE__*/_jsx(YAxis,{axisLine:false,tickLine:false,tick:{fill:'#888',fontSize:12},tickFormatter:value=>\"$\".concat(value/1000,\"k\")}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"$\".concat(value),name==='income'?'Income':'Expenses'],contentStyle:{backgroundColor:'#2a2a2a',border:'1px solid #444',borderRadius:'8px',color:'#fff'}}),/*#__PURE__*/_jsx(Bar,{dataKey:\"income\",fill:\"#10b981\",radius:[2,2,0,0]}),/*#__PURE__*/_jsx(Bar,{dataKey:\"expenses\",fill:\"#ef4444\",radius:[2,2,0,0]})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Total Monthly Income\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value positive\",children:[\"$\",totalIncome.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Total Monthly Expenses\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value\",children:[\"$\",totalExpenses.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Net Balance\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value \".concat(totalIncome-totalExpenses>=0?'positive':''),children:[\"$\",(totalIncome-totalExpenses).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"summary-label\",children:\"Savings Rate\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"summary-value positive\",children:[savingsRate,\"%\"]})]})]})]});};export default FinancialStats;","map":{"version":3,"names":["React","PieChart","Pie","Cell","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","Tooltip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FinancialStats","_ref","transactions","currentMonth","Date","getMonth","currentYear","getFullYear","currentMonthTransactions","filter","t","transactionDate","date","income","type","expenses","expenseCategories","reduce","acc","transaction","category","amount","expenseData","Object","entries","map","_ref2","index","name","value","color","monthlyData","i","setMonth","monthName","toLocaleDateString","month","monthTransactions","monthIncome","sum","monthExpenses","push","totalIncome","totalExpenses","savingsRate","Math","round","className","children","length","width","height","data","cx","cy","innerRadius","outerRadius","paddingAngle","dataKey","entry","fill","concat","formatter","contentStyle","backgroundColor","border","borderRadius","item","style","toFixed","textAlign","padding","axisLine","tickLine","tick","fontSize","tickFormatter","radius"],"sources":["C:/Users/dzm13/anita-finance-advisor/src/components/FinancialStats.tsx"],"sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from 'recharts';\r\nimport './FinancialStats.css';\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  type: 'income' | 'expense';\r\n  amount: number;\r\n  category: string;\r\n  description: string;\r\n  date: Date;\r\n  user_id?: string;\r\n}\r\n\r\ninterface FinancialStatsProps {\r\n  transactions?: Transaction[];\r\n}\r\n\r\nconst FinancialStats: React.FC<FinancialStatsProps> = ({ transactions = [] }) => {\r\n  // Calculate real data from transactions\r\n  const currentMonth = new Date().getMonth();\r\n  const currentYear = new Date().getFullYear();\r\n  \r\n  const currentMonthTransactions = transactions.filter(t => {\r\n    const transactionDate = new Date(t.date);\r\n    return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\r\n  });\r\n\r\n  const income = currentMonthTransactions.filter(t => t.type === 'income');\r\n  const expenses = currentMonthTransactions.filter(t => t.type === 'expense');\r\n\r\n  // Calculate expense categories\r\n  const expenseCategories = expenses.reduce((acc, transaction) => {\r\n    const category = transaction.category || 'Other';\r\n    if (!acc[category]) {\r\n      acc[category] = 0;\r\n    }\r\n    acc[category] += transaction.amount;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  const expenseData = Object.entries(expenseCategories).map(([name, value], index) => ({\r\n    name,\r\n    value,\r\n    color: ['#667eea', '#764ba2', '#f093fb', '#f5576c', '#4facfe', '#10b981', '#f59e0b'][index % 7]\r\n  }));\r\n\r\n  // Calculate monthly data for the last 6 months\r\n  const monthlyData = [];\r\n  for (let i = 5; i >= 0; i--) {\r\n    const date = new Date();\r\n    date.setMonth(date.getMonth() - i);\r\n    const monthName = date.toLocaleDateString('en-US', { month: 'short' });\r\n    \r\n    const monthTransactions = transactions.filter(t => {\r\n      const transactionDate = new Date(t.date);\r\n      return transactionDate.getMonth() === date.getMonth() && \r\n             transactionDate.getFullYear() === date.getFullYear();\r\n    });\r\n    \r\n    const monthIncome = monthTransactions\r\n      .filter(t => t.type === 'income')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    const monthExpenses = monthTransactions\r\n      .filter(t => t.type === 'expense')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n    \r\n    monthlyData.push({\r\n      month: monthName,\r\n      income: monthIncome,\r\n      expenses: monthExpenses\r\n    });\r\n  }\r\n\r\n  const totalIncome = income.reduce((sum, t) => sum + t.amount, 0);\r\n  const totalExpenses = expenses.reduce((sum, t) => sum + t.amount, 0);\r\n  const savingsRate = totalIncome > 0 ? Math.round(((totalIncome - totalExpenses) / totalIncome) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"financial-stats\">\r\n      <div className=\"stats-section\">\r\n        <h4>Monthly Expenses</h4>\r\n        {expenseData.length > 0 ? (\r\n          <>\r\n            <div className=\"pie-chart-container\">\r\n              <ResponsiveContainer width=\"100%\" height={150}>\r\n                <PieChart>\r\n                  <Pie\r\n                    data={expenseData}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    innerRadius={40}\r\n                    outerRadius={60}\r\n                    paddingAngle={2}\r\n                    dataKey=\"value\"\r\n                  >\r\n                    {expenseData.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={entry.color} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip \r\n                    formatter={(value: number) => [`$${value}`, 'Amount']}\r\n                    contentStyle={{\r\n                      backgroundColor: '#2a2a2a',\r\n                      border: '1px solid #444',\r\n                      borderRadius: '8px',\r\n                      color: '#fff'\r\n                    }}\r\n                  />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            <div className=\"expense-legend\">\r\n              {expenseData.map((item, index) => (\r\n                <div key={index} className=\"legend-item\">\r\n                  <div \r\n                    className=\"legend-color\" \r\n                    style={{ backgroundColor: item.color }}\r\n                  />\r\n                  <span className=\"legend-label\">{item.name}</span>\r\n                  <span className=\"legend-value\">${item.value.toFixed(2)}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', padding: '20px', color: '#888' }}>\r\n            No expenses recorded this month\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"stats-section\">\r\n        <h4>Income vs Expenses</h4>\r\n        <div className=\"bar-chart-container\">\r\n          <ResponsiveContainer width=\"100%\" height={120}>\r\n            <BarChart data={monthlyData}>\r\n              <XAxis \r\n                dataKey=\"month\" \r\n                axisLine={false}\r\n                tickLine={false}\r\n                tick={{ fill: '#888', fontSize: 12 }}\r\n              />\r\n              <YAxis \r\n                axisLine={false}\r\n                tickLine={false}\r\n                tick={{ fill: '#888', fontSize: 12 }}\r\n                tickFormatter={(value) => `$${value/1000}k`}\r\n              />\r\n              <Tooltip \r\n                formatter={(value: number, name: string) => [\r\n                  `$${value}`, \r\n                  name === 'income' ? 'Income' : 'Expenses'\r\n                ]}\r\n                contentStyle={{\r\n                  backgroundColor: '#2a2a2a',\r\n                  border: '1px solid #444',\r\n                  borderRadius: '8px',\r\n                  color: '#fff'\r\n                }}\r\n              />\r\n              <Bar dataKey=\"income\" fill=\"#10b981\" radius={[2, 2, 0, 0]} />\r\n              <Bar dataKey=\"expenses\" fill=\"#ef4444\" radius={[2, 2, 0, 0]} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-summary\">\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Total Monthly Income</span>\r\n          <span className=\"summary-value positive\">${totalIncome.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Total Monthly Expenses</span>\r\n          <span className=\"summary-value\">${totalExpenses.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Net Balance</span>\r\n          <span className={`summary-value ${totalIncome - totalExpenses >= 0 ? 'positive' : ''}`}>\r\n            ${(totalIncome - totalExpenses).toFixed(2)}\r\n          </span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span className=\"summary-label\">Savings Rate</span>\r\n          <span className=\"summary-value positive\">{savingsRate}%</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinancialStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}